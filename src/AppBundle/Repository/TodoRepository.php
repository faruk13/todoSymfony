<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * TodoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TodoRepository extends EntityRepository
{
//
//    public function allTodosOfUser($username){
//        return $this->findBy(
//            ['byUser' => $username],
//            ['id' => 'DESC']
//            );
//    }

public function allTodosOfUser($username, $page_num=0){
    $limit = 5;

    $qb = $this->createQueryBuilder('td')
        ->select('td.id','td.name','td.description','td.priority')
        //->from('AppBundle:Todo', 'td')
        ->where('td.byUser = :username')
        ->addOrderBy('td.id','desc')
        ->setParameter('username',$username)
        ->setFirstResult($page_num * $limit)
        ->setMaxResults($limit);
//        $query = $qb->getQuery();
//        $sql = "select status, name,id,due_date as dueDate,created_at, description, category, priority as createdAt from todo where userId='rahul' group by status,dueDate,priority order by status,dueDate";
//        return $this->getEntityManager()->getConnection()->query($sql);

    $paginator = new Paginator($qb,false);
    $paginator->setUseOutputWalkers(false);
    return $paginator;
}

    public function totalTodoCountByUser($username){
        //return 4;
        return  $this->createQueryBuilder('u')
            ->select('count(DISTINCT t.id)')
            ->from('AppBundle:Todo', 't')
            ->where('t.byUser = :username')
            ->setParameter('username', $username)
            ->getQuery()
            ->getSingleScalarResult();
    }


    public function deleteTodo($id, $username){
        return $this->findOneBy([
            'byUser' => $username,
            'id' =>$id
            ]
        );
    }

}
